*Comandos usados practica 1 CONFIGURACION DEL MENU GRUB:

Configure el menu de Grub para que el tiempo de esperaen el que muestra el menu sea de 20 Segundos (Mostrar el resultado)

sudo vi /etc/default/grub
GRUB_TIMEOUT=20
sudo grub2-mkconfig -o /boot/grub2/grub.cfg
sudo reboot

**********************************************
Muestre algun metodo de recuperacion si se me ha olvidado la contrasena del usuario root.

sudo reboot
presionar la tecla shift
presionar la tecla e 
escribir el comando rd.break
cntrl x
mount -o remount,rw /sysroot
chroot /sysroot
passwd
ingresar la nueva contrasena
touch /.autorelabel
exit
exit

============================================

Comandos usados practica 2 SCRIPTS

Crear un script que haga un backup creando un comprimido utilizando TAR de la carpeta /home/(tu_usuario). el nombre del archivo debe de tener la fecha y la hora actual en formato dd-mm-yyyy:hh:mm.

USUARIO=$20240916-AH  # Obtiene el usuario actual
FECHA=$(date +"%d-%m-%Y:%H:%M")  # Formato dd-mm-yyyy:hh:mm
DESTINO="/home/20240916-AH/backup"  # Directorio donde se guardará el backup

#!/bin/bash

ARCHIVO="backup_$USUARIO_$FECHA.tar.gz"  # Nombre del archivo de backup

# Crear el directorio de backups si no existe
mkdir -p $DESTINO

# Crear el archivo comprimido con TAR
tar -czvf $DESTINO/$ARCHIVO /home/$USUARIO

# Mensaje de éxito
echo "Backup de /home/$USUARIO completado!"
echo "Archivo guardado en: $DESTINO/$ARCHIVO"

**********************************************

* Crear un script que copie el resultado del comando ifconfig en un archivo en el escritorio. El script debe de preguntar cual nombre desea ponerle al archivo y crear el archivo con el nombre provisto.
 
#!/bin/bash

echo "Ingrese el nombre del archivo"
read file_name

# Capturar resultado del comando 'ifconfig'
comando=$(ifconfig)

# Ruta del escritorio
ruta_escritorio="/home/20240916-AH/Desktop"
archivo="$ruta_escritorio/$file_name"
echo "$archivo" > $file_name


============================================

Comandos usados practica 3 SSH:

Configure su VM server en modo Bridge y valide que desde su maquina host de windows pueda alcanzarla via ping.

-ping direccion ip

habilite el servicio de ssh y pruebe conectandose desde su maquina host utilizando su usuario y contrasena.

sudo systemctl enable sshd
ssh usuario-remoto@direccion-ip

En su maquina Host (windows) genere un par de llaves (publica-privada) especifique el destino donde se guardaran las llaves y en la parte de paraphase, dejarlo en blanco.

1-) ssh-keygen -t rsa -b 2048

copie la llave publica generada al servidor.

1-) ssh-copy-id 20240916-AH@ip_maquinaremota

realize la prueba intentando conectarse via ssh nuevamente desde la maquina host (windows) hasta la VM linux, si la practica fue realizada de forma correcta, debe de entrar de forma automatica sin solicitar credenciales

ssh 20240916-AH@ip_servidor_remoto

============================================************************************************************************


Configuración básica de Servidor FTP  (Centos 8):

Conexiones anónimas:

Se instala el servidor ftp:
[root@server ~]# dnf -y install vsftpd


Se habilitan los servicios necesarios:
[root@server ~]# systemctl enable vsftpd
[root@server ~]# systemctl start vsftpd


De forma predeterminada la carpeta asignada para el servidor ftp es:
/var/ftp



Editamos el archivo vsftpd.conf:
[root@server ~]# vi /etc/vsftpd/vsftpd.conf


Si queremos aceptar conexiones anónimas debemos asegurarnos que la siguiente línea esté descomentada y en YES:
anonymous_enable=YES


Si se desea permitir las conexiones anónimas sin el uso de password hay que agregar la línea siguiente:
no_anon_password=YES


Por otra parte, si se desea dar acceso a los usuarios locales del sistema, se debe descomentar la siguiente línea:
#local_enable=YES


Configuramos la regla del firewall:
[root@server ~]# firewall-cmd --permanent --add-port=20-21/tcp
[root@server ~]# firewall-cmd --reload


Comprobar que SELinux está deshabilitado.
[root@server ~]# setenforce 0


Reiniciamos el servicio vsftpd:
[root@server ~]# systemctl restart vsftpd

FTP - Conexiones por usuarios autorizados:

Se instala el servidor ftp:
[root@server ~]# dnf -y install vsftpd


Editamos el archivo vsftpd.conf:
[root@server ~]# vi /etc/vsftpd/vsftpd.conf


Si queremos rechazar conexiones anónimas debemos comentar la siguiente línea o ponerla en NO:
anonymous_enable=NO


Por otorgar acceso a los usuarios creados, se debe descomentar la siguiente línea:
local_enable=YES


Si además, los usuarios podrán subir archivos al servidor, será necesario usar la siguiente opción:
write_enable=YES


Es conveniente restringir el acceso a otros directorios fuera del directorio del usuario, para ello es necesario habilitar la siguiente opción:
chroot_local_users=YES


Indica que se verificará la lista de usuarios en cada conexión:
userlist_enable=YES


Al final del archivo agregar las siguientes líneas:
allow_writeable_chroot=YES
userlist_file=/etc/vsftpd/user_list
userlist_deny=NO

pasv_min_port=20000
pasv_max_port=20100

El modo pasivo ayuda a prevenir problemas en la conexión ocasionados por el firewall del cliente.

Configuramos la regla del firewall:
[root@server ~]# firewall-cmd --permanent --add-service=ftp
[root@server ~]# firewall-cmd --permanent --add-port=20000-20100/tcp
[root@server ~]# firewall-cmd --reload


Comprobar que SELinux está deshabilitado.
[root@server ~]# setenforce 0


Cear el usuario al que se le dará acceso:
[root@server ~]# adduser ftpuser
[root@server ~]# passwd ftpuser

Agregamos el usuario al archivo ´/etc/vsftpd/user_list´:
[root@server ~]# echo ftpuser >>  /etc/vsftpd/user_list

Iniciamos el servicio vsftpd:
[root@server ~]# systemctl enable vsftpd  --now

El servidor debe estar en línea y accesible para los usuarios configurados:

Configuración de certificados SSL:

Generar el certificado ssl:
[root@server ~]# openssl req -x509 -nodes -days 3650 -newkey rsa:2048 -keyout /etc/vsftpd/vsftpd.pem -out /etc/vsftpd/vsftpd.pem



Se habilita ssl y se especifican las rutas correspondientes en el archivo vsftpd.conf
[root@server ~]# vi /etc/vsftpd/vsftpd.conf


ssl_enable=YES
rsa_cert_file=/etc/vsftpd/vsftpd.pem
rsa_private_key_file=/etc/vsftpd/vsftpd.pem

**********************************************************************************************************************
Configuración de servidor DHCP  (Centos 8):

Se instala el servidor DHCP.
[root@server ~]# dnf -y install dhcp-server

Una vez instalado es necesario realizar la configuración en el archivo dhcpd.conf que se encuentra en el directorio /etc/dhcp, sin embargo, este se encuentra vacío de momento:
[root@server ~]# vi /etc/dhcp/dhcpd.conf 
De ser necesario, se puede encontrar un archivo de referencia en
 /usr/share/doc/dhcp-server/dhcpd.conf.example.

Para una configuración básica, el archivo sólo necesita lo siguiente:
default-lease-time 600;
max-lease-time 7200;


subnet 192.168.1.0 netmask 255.255.255.0 {
range 192.168.1.150 192.168.1.160;
option broadcast-address 192.168.1.255;
option routers 192.168.1.254;
option domain-name-servers 8.8.8.8;
}

Si se desea asignar direcciones IP fijas a un equipo se usa la siguiente sintaxis:
host testing{
hardware ethernet 08:00:27:bb:9a:01;
fixed-address 192.168.1.160;  
}

Se aplican las políticas de firewall correspondientes.
[root@server ~]# firewall-cmd --add-service=dhcp --permanent
[root@server ~]# firewall-cmd --reload

Guardamos el archivo y arrancamos el servicio:
[root@server ~]# systemctl enable dhcpd --now

Con lo anterior, les será asignada una dirección IP los clientes que lo soliciten.

